name: ci

on:
  push:
    branches:
      - master
    paths:
        - "Cargo.toml"
        - "src/**"
        - ".github/workflows/**"

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]

    env:
      GH_ACTIONS: true
      RUST_BACKTRACE: full
      DENO_BUILD_MODE: release

    steps:
      - name: Clone repository
        uses: actions/checkout@v1
        with:
          submodules: recursive
          
      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.43.1"

      - name: Log versions
        run: |
          node -v
          rustc --version
          cargo --version

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Remove Some Cache
        if: matrix.os == 'windows-latest'
        run: |
          where link.exe
          npm install --global windows-build-tools
          rm target/release/gn_root -Recurse -ErrorAction Ignore
          rm target/debug/gn_root -Recurse -ErrorAction Ignore

      - name: Add msbuild to PATH
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.0.0

      - name: Install python
        uses: actions/setup-python@v1
        with:
          python-version: "2.7.x"
          architecture: x64

      - name: Build
        env:
          RUST_BACKTRACE: 1
        run: cargo build --release

      - name: Release Plugin
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release draft"
          draft: true
          files: |
            target/release/libdeno_sass.dylib
            target/release/deno_sass.dll
            target/release/libdeno_sass.so
